
server.port=9001
spring.application.name=rs-web

#数据库配置
spring.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.db1.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.db1.url=jdbc:mysql://gz-cdb-8eb31bl9.sql.tencentcdb.com:62217/linjrspringboot?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.druid.db1.username=root
spring.datasource.druid.db1.password=ljr33220
#数据库配置2sqlserver
spring.datasource.db2.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.db2.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.db2.jdbc-url=jdbc:sqlserver://10.211.55.5:1433;DatabaseName=test
spring.datasource.db2.username=sa
spring.datasource.db2.password=ljr33220

##JPA配置
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
##运行时输出jpa执行的sql语句
spring.jpa.show-sql=true
## spring-boot-starter-data-jpa自动映射创建表动作 配置: 有表更新,无表创建
spring.jpa.hibernate.ddl-auto=update

# Redis 服务器地址
spring.redis.host=localhost
# Redis 服务器连接端口
spring.redis.port=6379
# 连接池最大连接数(使用负值表示没有限制) 默认 8
spring.redis.lettuce.pool.max-active=100
# 连接池最大阻塞等待时间(使用负值表示没有限制) 默认 -1
spring.redis.lettuce.pool.max-wait=PT10S
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=30
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=1
#链接超时时间
spring.redis.timeout=PT10S
################## 连接池配置 ################ #连接池建立时创建的初始化连接数
spring.datasource.druid.initial-size=5
#连接池中最大的活跃连接数
spring.datasource.druid.max-active=20
#连接池中最小的活跃连接数
spring.datasource.druid.min-idle=5
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.validation-query-timeout=30000
#是否在获得连接后检测其可用性
spring.datasource.druid.test-on-borrow=false
# 是否在连接放回连接池后检测其可用性
spring.datasource.druid.test-on-return=false
# 是否在连接空闲一段时间后检测其可用性
spring.datasource.druid.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 监控后台账号和密码
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=666666
#logging配置
logging.file=${logging.path}/${spring.application.name}.log
logging.path=logs
logging.level.com.linjr=debug
#加入以下配置 对应生成 mapper.xml 的路径
mybatis.mapper-locations=classpath:mapper/*.xml
#swagger 开关
swagger2.enable=true
#牺牲一点时间，去加长devtools的轮询时 间，增大等待时间
spring.devtools.restart.poll-interval=3000ms
spring.devtools.restart.quiet-period=2999ms
#JWT 密钥
jwt.secretKey=78944878877848fg)
jwt.accessTokenExpireTime=PT2H
jwt.refreshTokenExpireTime=PT8H
jwt.refreshTokenExpireAppTime=P30D
jwt.issuer=linjr.org.cn
######rabbitmq配置
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=linjr
spring.rabbitmq.password=ljr33220

spring.cloud.nacos.discovery.server-addr= localhost:8841,localhost:8842,localhost:8843

#
##nacos配置中心配置
#spring.cloud.nacos.config.server-addr=localhost:8841,localhost:8842,localhost:8843
##nacos配置的编码方式
#spring.cloud.nacos.config.encode=utf-8
##配置组名子，需要在nacos的配置设置，不然找不到
#spring.cloud.nacos.config.group=DEFAULT_GROUP
#spring.cloud.nacos.config.file-extension=properties
##共享文件配置
#spring.cloud.nacos.config.shared-dataids=share-configuration.properties
##跟新配置文件
#spring.cloud.nacos.config.refreshable-dataids=share-configuration.properties

#共享文件配置第二种方式
#spring.cloud.nacos.config.ext-config.dataId=share-configuration.properties
#spring.cloud.nacos.config.ext-config.group=DEFAULT_GROUP
#spring.cloud.nacos.config.ext-config.refresh=true

#熔断器配置
feign.hystrix.enabled=true
# 超时时间，默认1000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000
# 是否开启超时，默认false，不建议开启
#hystrix.command.default.execution.isolation.thread.interruptOnTimeout=false
# 最大线程数量，默认10，Fast Fail 应用，建议使用默认值。
# hystrix.threadpool.default.coreSize=20
# 允许在队列中的等待的任务数量，默认5，Fast Fail 应用，建议使用默认值。
# hystrix.threadpool.default.queueSizeRejectionThreshold=10

# queueSizeRejectionThreshold默认值是5，允许在队列中的等待的任务数量。maxQueueSize默认值是-1，队列大小。如果是Fast Fa
hystrix.command.default.execution.timeout.enabled=false

hystrix.command.default.execution.isolation.strategy=SEMAPHORE
#熔断器在整个统计时间内是否开启的阀值，默认20。也就是10秒钟内至少请求20次，熔断器才发挥起作用
hystrix.command.default.circuitBreaker.requestVolumeThreshold=10
#熔断器默认工作时间,默认:5秒.熔断器中断请求5秒后会关闭重试,如果请求仍然失败,继续打开熔断器5秒,如此循环
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=10000
#当出错率超过50%后熔断器启动
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50

# 指的是建立连接后从服务器读取到可用资源所用的时间, 默认为1秒 超过1秒没有读取到内容时，就认为此次读取不到内容并抛出Java.net.SocketException: read time out的异常
ribbon.ReadTimeout=70000
# ribbon请求连接的超时时间，默认值2000# 指的是建立连接所用的时间，适用于网络状况正常的情况下，两端连接所用的时间
ribbon.ConnectTimeout=20000
# 因为ribbon的重试机制和Feign的重试机制有冲突，所以源码中默认关闭Feign的重试机制 对所有的操作请求都进行重试，如果是post,put等操作没有实现幂等的情况下是很危险的，所以设置为false 在编程中一个幂等操作的特点是其任意多次执行所产生的影响均与一次执行的影响相同
ribbon.OkToRetryOnAllOperations=false
# 同一台实例最大重试次数,不包括首次调用，默认0
ribbon.MaxAutoRetries=0
# 重试负载均衡其他的实例最大重试次数,不包括首次调用，默认1
ribbon.MaxAutoRetriesNextServer=1

# 防止连接超时
feign.client.config.default.connect-timeout=20000
feign.client.config.default.read-timeout=20000
